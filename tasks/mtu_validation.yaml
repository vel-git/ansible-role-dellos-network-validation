---
- name: "Get Dell EMC OS10 MTU mismatch info"
  dellos10_command:
    commands:
      - command: "show lldp neighbors"
      - command: "show ip interface brief | display-xml"
  register: show_output
- name: "set fact to form database"
  set_fact:
    output_mtu:
      "{{ output_mtu|default([])+ [{'host': hostvars[item].cli.host, 'inv_name': item,
          'stdout_show_lldp': hostvars[item].show_output.stdout.0,
          'stdout_show_ip': hostvars[item].show_output.stdout.1 }]
          if(hostvars[item].show_output is defined and
          hostvars[item].show_output.failed == false) else output_mtu|default([]) }}"
    mtu_failed_host:
      "{{ mtu_failed_host|default([])+ [{'inv_name': item,
          'host': hostvars[item].ansible_host}]
          if(hostvars[item].show_output is not defined or
          hostvars[item].show_output.failed == true) else mtu_failed_host|default([])}}"
  loop: "{{ ansible_play_hosts_all }}"
  run_once: true
- name: call lib to convert ip interface info from xml to dict format
  base_xml_to_dict:
    cli_responses: "{{ item.stdout_show_ip }}"
  with_items: "{{ output_mtu }}"
  register: show_ip_intf_list
  run_once: true
- name: "Get Dell EMC OS10 Show system"
  import_role:
    name: ansible-role-dellos-fabric-summary
  register: show_system_network_summary
- name: "call lib to process"
  mtu_validate:
    show_lldp_neighbors_list: "{{ output_mtu }}"
    show_system_network_summary: "{{ show_system_network_summary.msg.results }}"
    show_ip_intf_brief: "{{ show_ip_intf_list.results }}"
  register: mtu_validation
  run_once: true
- name: "debug mtu validation result"
  debug: var=mtu_validation.msg.results
  run_once: true
- name: "debug mtu validation failed host result"
  debug: var=mtu_failed_host
  when: mtu_failed_host is defined and (mtu_failed_host|length > 0)
  run_once: true
